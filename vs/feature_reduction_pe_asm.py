# feature_reduction_pe_asm.py
#
# Read a PE ASM feature file and use chi-squared tests to remove features
# that are independent of the label.
#
# Input : ssorted-pe-asm-features.csv
#         row format = [file_name, [list of x86 opcodes], [list of x86 registers]]
#
# Output: sorted-pe-asm-features-reduced.csv
#         row format = [file_name, [list of x86 opcodes], [list of x86 registers]]
#
#
#
# Author: Derek Chadwick
# Date  : 30/09/2016
#
# TODO: optimise and many many things

import numpy as np
import scipy as sp
import pandas as pd
import sklearn as skl
import matplotlib.pyplot as plt
from sklearn.feature_selection import SelectKBest, SelectPercentile
from sklearn.feature_selection import chi2
from sklearn.metrics import log_loss, confusion_matrix, accuracy_score
from sklearn.ensemble import RandomForestClassifier, ExtraTreesClassifier
from sklearn.cross_validation import cross_val_score, KFold




def feature_reduction_percent(percentage, train_data_df, train_labels_df):
    
    return
    




train_data = pd.read_csv('data/train-malware-features-asm.csv')
labels = pd.read_csv('data/trainLabels.csv')
sorted_train_data = train_data.sort(columns='filename', axis=0, ascending=True, inplace=False)
sorted_train_labels = labels.sort(columns='Id', axis=0, ascending=True, inplace=False)
X = sorted_train_data.iloc[:,1:]
y = np.array(sorted_train_labels.iloc[:,1])
