#
# Input : sorted-packer-id-features.csv
#         entry format = [file_name]
#                        [packer_name]
#                        [packer_id]
#                        [valid_pe]
#                        [is_packed]
#
# Output: unpacked binary file [input_binary_filename.bin]
#         packed_file_list.txt
#
# Some of the samples are likely to have been wrongly classified as packed, but 
# the unpacker should be able to handle them correctly.
# Can also write out the file list so we can run the list through unpack.py
# on our Windows XP sandbox VM without using this script.
#
# Author: Derek Chadwick
# Date  : 12/08/2016



def write_packed_file_list(packer_id_feature_file, packed_list_file_name):
    # Load the malware packer id features sets from the sample set.
    packer_id_features = pd.read_csv(packer_id_feature_file)
    packed_files = packer_id_features[packer_id_features['is_packed'] == 1]
    
    fop = open(packed_list_file_name, 'w')
    counter = 0
    
    for file_name in packed_files['file_name']:
        full_name = "VirusShare_" + file_name + "\n"
        fop.write(full_name)
        counter += 1

    fop.close()
    
    print("Write {:d} filenames.".format(counter))
    
    return


def unpack_pe_binaries(file_list):
    
    counter = 0
    unpacked = 0
    error_count = 0
    for file_name in file_list:
        file_name = file_name.rstrip() # remove the newlines or else !!!
        file_path = ext_drive + file_name
        if (os.path.isfile(file_path)):
            # call unpack.py
            unpacked += 1
        else:
            #print("Error: file does not exist - {:s}".format(file_path))
            error_count += 1
           
        counter += 1
        if (counter % 1000) == 0: # print progress
            print('Disassembled: {:d} - {:s}'.format(counter,file_name))    
            
    print("Disassembled {:d} binaries with {:d} file path errors.".format(unpacked, error_count))  
    
    return


# Start of script

write_file_list = False # TODO: change to a command line option
feature_file_name = 'data/sorted-packer-id-features-vs251-252.csv' # TODO: change to a command line option
packed_list_file_name = 'data/packed_file_list.txt' # TODO: change to a command line option

if write_file_list == True:
    write_packed_file_list(feature_file_name, packed_list_file_name)
else:
    fip = open(packed_list_file_name)
    file_list = fip.readlines()
    unpack_pe_binaries(file_list)
    fip.close()
    
    
# End of Script