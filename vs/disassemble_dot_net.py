# disassemble_dot_net.py
#
# Performs two functions:
# 1. Generates of list of unpacked PE binary files for input to the second function.
# 2. Reads a list of unpacked .NET files and uses ildisasm.exe to disassemble
#    the CIL code.
#
# This has to run on a Windows VM as I cannot get Visual Studio 2015 to install
# using Wine.
#
# Input : unpacked_file_list.txt
#
# or
#
# Input : sorted-packer-id-features.csv
#         row format = [file_name, packer_name, packer_id, valid_pe, is_packed]
#
#         sorted-file-id-features.csv
#         row format = [file_name, file_type, file_id]
#
#         sorted-trid-id-features.csv
#         row format = [file_name, file_type, percentage, file_id]
#
# Output: assembler files [input_binary_filename.asm]
#         PE header files [input_binary_filename.txt]
#
# or
#
# Output: unpacked_file_list.txt
#
# Author: Derek Chadwick
# Date  : 01/10/2016


from multiprocessing import Pool
from optparse import OptionParser
import subprocess as sub
import os
import sys
import pandas as pd




def disassemble_dot_net_binaries(file_list):
    counter = 0
    disassed = 0
    error_count = 0
    pid = os.getpid()
    log_file = "data/" + str(pid) + '-pe-disass-log.net.txt'
    
    smsg = "{:d} Disassembling {:d} binary .NET files.".format(pid, len(file_list))
    print(smsg)
    flog = open(log_file, 'w')
    flog.write(smsg + "\n")
    
    for file_name in file_list:
        file_path = file_name.rstrip() # remove the newlines or else !!!
        asm_file_name = file_path + ".pe.net.asm"
        hdr_file_name = file_path + ".pe.net.txt"
            
        if (os.path.isfile(file_path)):
            fop = open(asm_file_name, 'w')
            # Dump the assembly code listing.
            sub.call(["ildisasm.exe", file_path], stdout=fop)
            disassed += 1
            fop.close
        else:
            error_count += 1
           
        counter += 1
        
        if (counter % 10) == 0: # print progress
            smsg = '{:d} Disassembled: {:d} - {:s}'.format(pid, counter, file_name)
            print(smsg)
            flog.write(smsg + "\n")    
 

    smsg = "{:d} Disassembled {:d} .NET binaries with {:d} file path errors.".format(pid, disassed, error_count)
    print(smsg)
    flog.write(smsg + "\n")
    flog.close()
    
    return



# Start of Script.


# End of Script.

