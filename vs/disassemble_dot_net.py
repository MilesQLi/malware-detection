# disassemble_dot_net.py
#
# Performs two functions:
# 1. Generates of list of unpacked PE binary files for input to the second function.
# 2. Reads a list of unpacked .NET files and uses ildisasm.exe to disassemble
#    the CIL code.
#
# Input : unpacked_file_list.txt
#
# or
#
# Input : sorted-packer-id-features.csv
#         row format = [file_name, packer_name, packer_id, valid_pe, is_packed]
#
#         sorted-file-id-features.csv
#         row format = [file_name, file_type, file_id]
#
#         sorted-trid-id-features.csv
#         row format = [file_name, file_type, percentage, file_id]
#
# Output: assembler files [input_binary_filename.asm]
#         PE header files [input_binary_filename.txt]
#
# or
#
# Output: unpacked_file_list.txt
#
# Author: Derek Chadwick
# Date  : 01/10/2016


from multiprocessing import Pool
from optparse import OptionParser
import subprocess as sub
import os
import sys
import pandas as pd



